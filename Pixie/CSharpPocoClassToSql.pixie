<?xml version="1.0"?>
<PixieFileV1 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Pattern>\s*
(?&lt;accessModifier&gt;[^\s]+)
\s*
(?&lt;typeNameString&gt;[^\s]+)
\s*
(?&lt;propertyName&gt;[^\s]+)
\s*
(?&lt;theRest&gt;[a-zA-Z0-9\s()]+)
.*

</Pattern>
  <Input>public int IntProp { get; set; }
public int? IntNullProp { get; set; }
public short ShortProp { get; set; }
public long LongProp { get; set; }
public byte ByteProp { get; set; }
public DateTime DateTimeProp { get; set; }
public string StringProp { get; set; }
public bool BoolProp { get; set; }</Input>
  <ReplacementString />
  <Options>
    <PixieRegexOption Selected="true" OptionName="IgnoreCase" />
    <PixieRegexOption Selected="false" OptionName="Multiline" />
    <PixieRegexOption Selected="false" OptionName="ExplicitCapture" />
    <PixieRegexOption Selected="false" OptionName="Singleline" />
    <PixieRegexOption Selected="true" OptionName="IgnorePatternWhitespace" />
    <PixieRegexOption Selected="false" OptionName="RightToLeft" />
    <PixieRegexOption Selected="false" OptionName="ECMAScript" />
    <PixieRegexOption Selected="false" OptionName="CultureInvariant" />
  </Options>
  <ReplaceLiveOutput>true</ReplaceLiveOutput>
  <HighlightLiveOutput>true</HighlightLiveOutput>
  <PopulateReplacement>true</PopulateReplacement>
  <UseCodeReplacement>true</UseCodeReplacement>
  <ReplacementCode>public string Replace(Match match)
{
  	try
	{
		var accessModifier = match.Groups["accessModifier"].Value;
		var typeNameString = match.Groups["typeNameString"].Value;
		var propertyName = match.Groups["propertyName"].Value;
		var theRest = match.Groups["theRest"].Value;

		var columnType = "NVARCHAR(50)";
		var nullableSwitch = "NOT NULL";

		if (typeNameString.Contains("?")) {
			nullableSwitch = "NULL";
		}

		typeNameString = typeNameString.Replace('?', ' ').Trim();

		if (typeNameString == "int")
			columnType = "INT";
		else if (typeNameString == "short")
			columnType = "SMALLINT";
		else if (typeNameString == "long")
			columnType = "BIGINT";
		else if (typeNameString == "byte")
			columnType = "TINYINT";
		else if (typeNameString == "DateTime")
			columnType = "DATETIME";
		else if (typeNameString == "bool")
			columnType = "BIT";
		else if (typeNameString == "double")
			columnType = "FLOAT";

		var result = String.Format(
		@"[{0}] {1} {2},",
		propertyName,
		columnType,
		nullableSwitch
		);

		return result + Environment.NewLine;
	}
	catch (Exception ex)
	{
		return ex.ToString();
	}

	return "// oops";
}</ReplacementCode>
</PixieFileV1>